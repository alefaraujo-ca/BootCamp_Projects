<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='COVID19_2020' inline='true' name='federated.0crql0r093apiw1ese62i1fv08de' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID19_2020_Mar' name='textscan.0z85n0u13rk3rs13kbsvq04x8apk'>
            <connection class='textscan' directory='C:/Users/Alessandra/Documents/UofT/Projects/Final/COVID19/Resources/Data' filename='COVID19_2020_Mar.csv' password='' server='' />
          </named-connection>
          <named-connection caption='country' name='textscan.09vn5k60o6h00j14i86k71brqlfc'>
            <connection class='textscan' directory='C:/Users/Alessandra/Documents/UofT/Projects/Final/COVID19/Resources/Data/country' filename='country.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[COVID19.csv].[ISO_2]' />
              <expression op='[country.csv].[ISO_2]' />
            </expression>
          </clause>
          <relation connection='textscan.0z85n0u13rk3rs13kbsvq04x8apk' name='COVID19.csv' table='[COVID19#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Days' ordinal='1' />
              <column datatype='date' name='Date' ordinal='2' />
              <column datatype='real' name='ISO_CountryID' ordinal='3' />
              <column datatype='string' name='Country/Region' ordinal='4' />
              <column datatype='string' name='ISO_CountryName' ordinal='5' />
              <column datatype='string' name='Province_Id' ordinal='6' />
              <column datatype='string' name='Province/State' ordinal='7' />
              <column datatype='string' name='Last Update' ordinal='8' />
              <column datatype='real' name='Confirmed' ordinal='9' />
              <column datatype='real' name='Deaths' ordinal='10' />
              <column datatype='real' name='Recovered' ordinal='11' />
              <column datatype='string' name='ISO_2' ordinal='12' />
              <column datatype='string' name='ISO_3' ordinal='13' />
              <column datatype='string' name='Latitude' ordinal='14' />
              <column datatype='string' name='Longitude' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.09vn5k60o6h00j14i86k71brqlfc' name='country.csv' table='[country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Country_Id' ordinal='1' />
              <column datatype='string' name='Name' ordinal='2' />
              <column datatype='string' name='ISO_2' ordinal='3' />
              <column datatype='string' name='ISO_3' ordinal='4' />
              <column datatype='real' name='Lat' ordinal='5' />
              <column datatype='real' name='Lon' ordinal='6' />
              <column datatype='integer' name='Population' ordinal='7' />
              <column datatype='integer' name='ID_worldometers' ordinal='8' />
              <column datatype='integer' name='Density(P/Km2)' ordinal='9' />
              <column datatype='integer' name='Land Area(Km2)' ordinal='10' />
              <column datatype='real' name='Fert.Rate' ordinal='11' />
              <column datatype='integer' name='Med.Age' ordinal='12' />
              <column datatype='real' name='UrbanPop' ordinal='13' />
              <column datatype='real' name='WorldShare' ordinal='14' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Confirmed]' value='[COVID19.csv].[Confirmed]' />
          <map key='[Country/Region]' value='[COVID19.csv].[Country/Region]' />
          <map key='[Country_Id]' value='[country.csv].[Country_Id]' />
          <map key='[Date]' value='[COVID19.csv].[Date]' />
          <map key='[Days]' value='[COVID19.csv].[Days]' />
          <map key='[Deaths]' value='[COVID19.csv].[Deaths]' />
          <map key='[Density(P/Km2)]' value='[country.csv].[Density(P/Km2)]' />
          <map key='[F1]' value='[COVID19.csv].[F1]' />
          <map key='[Fert.Rate]' value='[country.csv].[Fert.Rate]' />
          <map key='[ID]' value='[country.csv].[ID]' />
          <map key='[ID_worldometers]' value='[country.csv].[ID_worldometers]' />
          <map key='[ISO_2 (country.csv)]' value='[country.csv].[ISO_2]' />
          <map key='[ISO_2]' value='[COVID19.csv].[ISO_2]' />
          <map key='[ISO_3 (country.csv)]' value='[country.csv].[ISO_3]' />
          <map key='[ISO_3]' value='[COVID19.csv].[ISO_3]' />
          <map key='[ISO_CountryID]' value='[COVID19.csv].[ISO_CountryID]' />
          <map key='[ISO_CountryName]' value='[COVID19.csv].[ISO_CountryName]' />
          <map key='[Land Area(Km2)]' value='[country.csv].[Land Area(Km2)]' />
          <map key='[Last Update]' value='[COVID19.csv].[Last Update]' />
          <map key='[Lat]' value='[country.csv].[Lat]' />
          <map key='[Latitude]' value='[COVID19.csv].[Latitude]' />
          <map key='[Lon]' value='[country.csv].[Lon]' />
          <map key='[Longitude]' value='[COVID19.csv].[Longitude]' />
          <map key='[Med.Age]' value='[country.csv].[Med.Age]' />
          <map key='[Name]' value='[country.csv].[Name]' />
          <map key='[Population]' value='[country.csv].[Population]' />
          <map key='[Province/State]' value='[COVID19.csv].[Province/State]' />
          <map key='[Province_Id]' value='[COVID19.csv].[Province_Id]' />
          <map key='[Recovered]' value='[COVID19.csv].[Recovered]' />
          <map key='[UrbanPop]' value='[country.csv].[UrbanPop]' />
          <map key='[WorldShare]' value='[country.csv].[WorldShare]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_CountryID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ISO_CountryID]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_CountryID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_CountryName]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_CountryName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_Id]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Province_Id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_2]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_3]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>ISO_3</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[COVID19.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_Id]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Country_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_2 (country.csv)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ISO_2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO_3 (country.csv)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ISO_3</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lon]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Lon</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID_worldometers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID_worldometers]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>ID_worldometers</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density(P/Km2)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Density(P/Km2)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Density(P/Km2)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area(Km2)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Land Area(Km2)]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Land Area(Km2)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fert.Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fert.Rate]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Fert.Rate</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med.Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med.Age]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>Med.Age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UrbanPop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UrbanPop]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>UrbanPop</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WorldShare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WorldShare]</local-name>
            <parent-name>[country.csv]</parent-name>
            <remote-alias>WorldShare</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infected' datatype='real' name='[Calculation_347621628396007428]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Confirmed])/AVG([Population])' />
      </column>
      <column caption='Death_Rate' datatype='real' name='[Calculation_355784403550769152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Deaths]) / SUM([Confirmed])' />
      </column>
      <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Country_Id]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID_worldometers]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ISO_2 (country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[ISO_3 (country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[ISO_CountryID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Province_Id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Deaths]' derivation='Sum' name='[diff:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.441909' measure-ordering='alphabetic' measure-percentage='0.558091' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Province/State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ashland, NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fresno County, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Placer County, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara County, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cherokee County, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Douglas County, OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendricks County, IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Klamath County, OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockingham County, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clark County, WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fayette County, KY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Humboldt County, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nassau County, NY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Benito, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suffolk County, MA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virgin Islands, U.S.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berkshire County, MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis County, UT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Princess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jefferson Parish, LA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marion County, OR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York County, NY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Providence County, RI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sarasota, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tulsa County, OK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wayne County, PA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bennington County, VT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Contra Costa County, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton County, GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson County, OR &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manatee County, FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plymouth County, MA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Clara, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington County, OR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cobb County, GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego County, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffolk County, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlotte County, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Douglas County, CO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrison County, KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;King County, WA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sonoma County, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Norfolk County, MA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Paso County, CO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hillsborough, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lackland, TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery County, MD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Omaha, NE (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockland County, NY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spartanburg County, SC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carver County, MN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harford County, MD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middlesex County, MA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ramsey County, MN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shelby County, TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unassigned Location, VT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Collin County, TX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floyd County, GA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madera County, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pierce County, WA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco County, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Summit County, CO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Volusia County, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Princess Cruise Ship&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Johnson County, IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norfolk County, MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saratoga County, NY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ulster County, NY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broward County, FL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delaware County, PA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grant County, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Johnson County, KS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seattle, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Umatilla, OR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westchester County, NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston County, SC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harris County, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kershaw County, SC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norwell County, MA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Snohomish County, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unassigned Location, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wuhan Evacuee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chatham County, NC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Douglas County, NE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kittitas County, WA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Okaloosa County, FL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside County, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unknown Location, MA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yolo County, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bergen County, NJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cook County, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jefferson County, KY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maricopa County, AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Polk County, GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Cruz County, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Travis, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington, D.C.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Bend County, TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison, WI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinal County, AZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Mateo, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tempe, AZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wake County, NC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairfax County, VA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honolulu County, HI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lackland, TX (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery County, PA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orange County, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento County, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane County, WA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denver County, CO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queens County, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shasta County, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unassigned Location (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamson County, TN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berkeley, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davidson County, TN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grafton County, NH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jefferson County, WA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marion County, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York City, NY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portland, OR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Rosa County, FL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Travis, CA (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washoe County, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alameda County, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark County, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfield County, CT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hudson County, NJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lee County, FL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montgomery County, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orange, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis County, MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ISO_CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (the)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea (the Democratic People&apos;s Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine, State of&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States of America (the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lao People&apos;s Democratic Republic (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova (the Republic of)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines (the)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holy See (the)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea (the Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cayman Islands (the)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russian Federation (the)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania, United Republic of&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas (the)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic (the)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (the Democratic Republic of the)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faroe Islands (the)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taiwan (Province of China)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic (the)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland (the)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger (the)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Cases_2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='ISO_CountryName' />
        <param name='target' value='New Cases_2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{6CA6A9F8-5F8E-4D96-BF68-CC8EA418582E}' />
    </worksheet>
    <worksheet name='Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{679341B6-6C57-4110-AF84-7FC8E3E2EBDD}' />
    </worksheet>
    <worksheet name='Infected'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
        <mark-labels>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</field>
                  <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</field>
                  <field>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>20200419</value>
                <value>&quot;Canada&quot;</value>
                <value>35633.0</value>
              </tuple>
            </tuple-reference>
            <label-position x='-11' y='-29' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{800723A8-8602-40E3-A6D9-73EA38924FBA}' />
    </worksheet>
    <worksheet name='New Cases BRxCA (Confirmed)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{CB1AE7C2-9681-4DB5-AA17-23A9BB234022}' />
    </worksheet>
    <worksheet name='New Cases_1 BRxCA (deaths)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[diff:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Deaths:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{3A014F45-E2D3-4106-B4E6-DFF2C046095E}' />
    </worksheet>
    <worksheet name='New Cases_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;United States of America (the)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{8207EB59-0AFF-4C53-A81A-BAB758BC9918}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]'>
            <groupfilter function='member' level='[md:Date:ok]' member='20200424' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0crql0r093apiw1ese62i1fv08de].[Longitude (generated)]' field-type='quantitative' max='-6750041.7984571103' min='-15418291.005796313' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0crql0r093apiw1ese62i1fv08de].[Latitude (generated)]' field-type='quantitative' max='10527429.100000469' min='5525282.8491973039' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' />
              <lod column='[federated.0crql0r093apiw1ese62i1fv08de].[none:Province/State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[Latitude (generated)]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{14195BAB-46C0-4D41-AB61-CFD75FEB7D8B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column caption='Infected' datatype='real' name='[Calculation_347621628396007428]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Confirmed])/AVG([Population])' />
            </column>
            <column caption='Death_Rate' datatype='real' name='[Calculation_355784403550769152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Deaths]) / SUM([Confirmed])' />
            </column>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_347621628396007428]' derivation='User' name='[usr:Calculation_347621628396007428:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_355784403550769152]' derivation='User' name='[usr:Calculation_355784403550769152:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_347621628396007428:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_355784403550769152:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_347621628396007428:qk]&quot;</bucket>
              <bucket>&quot;[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_355784403550769152:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]'>
            <groupfilter function='member' level='[md:Date:ok]' member='20200504' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Armenia&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Central African Republic (the)&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Chad&quot;' />
              <groupfilter from='&quot;Chile&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;France&quot;' />
              <groupfilter from='&quot;Gabon&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter from='&quot;Guinea&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Honduras&quot;' />
              <groupfilter from='&quot;Hungary&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Japan&quot;' />
              <groupfilter from='&quot;Jordan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Kenya&quot;' />
              <groupfilter from='&quot;Korea (the Republic of)&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Luxembourg&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter from='&quot;Mexico&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Mozambique&quot;' />
              <groupfilter from='&quot;Nepal&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Pakistan&quot;' />
              <groupfilter from='&quot;Panama&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Republic of North Macedonia&quot;' />
              <groupfilter from='&quot;Romania&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter from='&quot;Saint Vincent and the Grenadines&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]</column>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_347621628396007428:qk]' value='p0.0000%' />
            <format attr='text-format' field='[federated.0crql0r093apiw1ese62i1fv08de].[usr:Calculation_355784403550769152:qk]' value='p0.0000%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok] / [federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk])</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9492B694-D63C-4AC8-919E-F7A3D40C0582}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]'>
            <groupfilter function='member' level='[md:Date:ok]' member='20200424' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Armenia&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Central African Republic (the)&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Chad&quot;' />
              <groupfilter from='&quot;Chile&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter from='&quot;Fiji&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;France&quot;' />
              <groupfilter from='&quot;Gabon&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter from='&quot;Guinea&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Honduras&quot;' />
              <groupfilter from='&quot;Hungary&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Japan&quot;' />
              <groupfilter from='&quot;Jordan&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Kenya&quot;' />
              <groupfilter from='&quot;Korea (the Republic of)&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Luxembourg&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter from='&quot;Mexico&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Mozambique&quot;' />
              <groupfilter from='&quot;Nepal&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Pakistan&quot;' />
              <groupfilter from='&quot;Panama&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Republic of North Macedonia&quot;' />
              <groupfilter from='&quot;Romania&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter from='&quot;Saint Vincent and the Grenadines&quot;' function='range' level='[none:ISO_CountryName:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{612BCD5D-8DAA-4E1A-9B28-665D42914777}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[diff:sum:Confirmed:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]' value='336' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[diff:sum:Confirmed:qk:1]' />
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' />
              <text column='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok] / [federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk])</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</cols>
      </table>
      <simple-id uuid='{6AFC9187-26FA-428F-B421-A45F20B97225}' />
    </worksheet>
    <worksheet name='US'>
      <layout-options>
        <title>
          <formatted-text>
            <run>COVID19 - &lt;</run>
            <run>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID19_2020' name='federated.0crql0r093apiw1ese62i1fv08de' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0crql0r093apiw1ese62i1fv08de'>
            <column datatype='real' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ISO_CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ISO_CountryName]' derivation='None' name='[none:ISO_CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
            <groupfilter function='member' level='[none:ISO_CountryName:nk]' member='&quot;United States of America (the)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f28e2b' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]</rows>
        <cols>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{6CBEFA84-6D0B-45A5-9CC4-575872AEBFA8}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Infected'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B214C490-7E48-445E-8DF9-D113CCCB2570}' />
    </window>
    <window class='worksheet' name='Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5856C9B-71B3-4D41-9170-73A59D88AC94}' />
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC5AC396-BEAB-4FC5-83EE-CF597A425F7C}' />
    </window>
    <window class='worksheet' name='US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:Province/State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2540DF84-ED4E-4970-B3DF-05B4B0A9124C}' />
    </window>
    <window class='worksheet' name='New Cases BRxCA (Confirmed)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{87D599D3-94C6-49ED-99AE-419D07B3FDC0}' />
    </window>
    <window class='worksheet' maximized='true' name='New Cases_1 BRxCA (deaths)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5BD8897-C5FB-49C0-B975-AE3A7F755490}' />
    </window>
    <window class='worksheet' name='New Cases_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AD6986A-99D9-4BB0-914B-C74562B924DB}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[:Measure Names]</field>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[none:ISO_CountryName:nk]</field>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79CC5169-2FE9-405E-844D-DE70FC0DBEBE}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{071E8569-7643-4358-A8BC-624BB7AE03BC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F7A60E18-374F-4D61-A083-D515F32554D2}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0crql0r093apiw1ese62i1fv08de].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0crql0r093apiw1ese62i1fv08de].[md:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F9727411-7129-4ADC-AAC3-AFA7A8F3DAB2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country' width='192'>
      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
      YAG5N8SoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Infected' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases BRxCA (Confirmed)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Cases_1 BRxCA (deaths)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Cases_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      sSQu4NYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      1i7ia82xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
